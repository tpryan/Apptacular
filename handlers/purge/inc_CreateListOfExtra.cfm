<cfscript>
	failed = FALSE;
	utils = New apptacular.handlers.cfc.utils.utils();
	FS = createObject("java", "java.lang.System").getProperty("file.separator");
	baseURL = "http://" & cgi.server_name & ":" & cgi.server_port; 
	
	
	// get folders needed for these operations. 
	rootFilePath = url.appRoot;
	resourcePath = url.appRoot;
	dbConfigPath = utils.findConfig(rootFilePath,resourcePath,"schema");
	
	
	// get the cfc path from the schema files.
	rootCFCPath = utils.findCFCPathFromFilePath(rootFilePath);
	
	
	if (not directoryExists(dbConfigPath)){			
		messagesPath = getDirectoryFromPath(cgi.script_name) & "/messages.cfm";
		messagesOptions = "?type=notanapplication";
		messagesURL = baseURL & messagesPath & messagesOptions;
		failed = true;
	}
	else{
		// get the datasource name from the schema files.
		dsName = DirectoryList(dbConfigPath, false, "name")[1];
	}
	
</cfscript>

<cfif failed>
	<cf_ideWrapper messageURL="#messagesURL#" />
	<cfabort> 
</cfif>


<cfscript>	

	//process both DB and file version of schema
	stringUtils = New apptacular.handlers.cfc.utils.stringUtil();
	reservedWordHelper = New apptacular.handlers.cfc.utils.reservedWordHelper();
	
	log = New apptacular.handlers.cfc.utils.log(dsName);
	log.startEvent("app", "Apptacular Purge Process");
	
	db = New apptacular.handlers.cfc.db.datasource(dsName, stringUtils, log, reservedWordHelper);
	dbConfig = New apptacular.handlers.cfc.db.dbConfig(dbConfigPath);
	datamodel= dbConfig.overwriteConfig(db);
	dbConfig.writeConfig(datamodel);
	
	
	//process both default and file version of config
	config = New apptacular.handlers.cfc.generators.cfapp.Config(rootFilePath, rootCFCPath);
	config.overwriteFromDisk();
	config.writeToDisk();
	
	
	
	// Fire up the generator to check what files are generated by the extension
	ormGenerator = new apptacular.handlers.cfc.generators.cfapp.ormGenerator(datamodel, config);
	viewGenerator = new apptacular.handlers.cfc.generators.cfapp.viewGenerator(datamodel, config);
	serviceGenerator = new apptacular.handlers.cfc.generators.cfapp.serviceGenerator(datamodel, config);
	unittestGenerator = new apptacular.handlers.cfc.generators.cfapp.unittestGenerator(datamodel, config);

	generator = New apptacular.handlers.cfc.generators.cfapp.generator(datamodel, config, ormGenerator, viewGenerator, serviceGenerator, unittestGenerator, log);
		
	generator.generate();
	filesGenerated = generator.getAllGeneratedFilePaths();
	
	
	filesList = DirectoryList(rootFilePath, true, "query");
	
</cfscript>	


<!--- Get all of the files that don't belong in the file resu.t --->
<cfquery name="filesList" dbtype="query">
	SELECT 	directory + '#FS#' + name as path
	FROM 	filesList
	WHERE 	name like '%.cfm'
	OR	 	name like '%.cfc'
	OR	 	name like '%.css'
</cfquery>

<!--- Lower here serves to ensure that we propertly purge files. --->
<cfquery name="extrafilesList" dbtype="query">
	SELECT 	path
	FROM 	filesList
	WHERE 	LOWER(path) not in (<cfqueryParam cfsqltype="cf_sql_varchar" list="true" value="#Lcase(ArrayToList(filesGenerated))#" />)
</cfquery>