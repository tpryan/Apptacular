<cfsetting showdebugoutput="FALSE" />

<cfif not structKeyExists(form, "ideeventInfo")>
	<cffile action="read" file="#ExpandPath('./sampleEditSchema.xml')#" variable="ideeventInfo" />
</cfif>

<cfscript>
	utils = New cfc.utils();
	FS = createObject("java", "java.lang.System").getProperty("file.separator");
	
	xmldoc = XMLParse(ideeventInfo); 
	
	// get folders needed for these operations. 
	rootFilePath = XMLDoc.event.ide.projectview.XMLAttributes.projectlocation;
	dbConfigPath = rootFilePath & FS & ".apptacular/schema/";
	
	// get the cfc path from the schema files.
	rootCFCPath = utils.findCFCPathFromFilePath(rootFilePath);
	
	// get the datasource name from the schema files.
	dsName = DirectoryList(dbConfigPath, false, "name")[1];

	//process both DB and file version of schema
	db = New cfc.db.datasource(dsName);
	dbConfig = New cfc.db.dbConfig(dbConfigPath);
	datamodel= dbConfig.overwriteConfig(db);
	dbConfig.writeConfig(datamodel);
	
	
	//process both default and file version of config
	config = New generators.cfapp.Config(rootFilePath, rootCFCPath);
	config.overwriteFromDisk();
	config.writeToDisk();
	
	
	// Fire up the generator to check what files are generated by the extension
	ormGenerator = new generators.cfapp.ormGenerator(datamodel, config);
	viewGenerator = new generators.cfapp.viewGenerator(datamodel, config);
	serviceGenerator = new generators.cfapp.serviceGenerator(datamodel, config);
	unittestGenerator = new generators.cfapp.unittestGenerator(datamodel, config);

	generator = New generators.cfapp.generator(datamodel, config, ormGenerator, viewGenerator, serviceGenerator, unittestGenerator);
		
	generator.generate();
	filesGenerated = generator.getAllGeneratedFilePaths();
	
	filesList = DirectoryList(rootFilePath, true, "query");
	
</cfscript>	


<!--- Get all of the files that don't belong in the file resu.t --->
<cfquery name="filesList" dbtype="query">
	SELECT 	directory + '#FS#' + name as path
	FROM 	filesList
	WHERE 	name like '%.cfm'
	OR	 	name like '%.cfc'
	OR	 	name like '%.css'
</cfquery>

<cfquery name="extrafilesList" dbtype="query">
	SELECT 	path
	FROM 	filesList
	WHERE 	path not in (<cfqueryParam cfsqltype="cf_sql_varchar" list="true" value="#ArrayToList(filesGenerated)#" />)
</cfquery>


<!--- Delete Extra files --->
<cfloop query="extrafilesList">
	<cffile action="delete" file="#extrafilesList.path[extrafilesList.currentRow]#" />
</cfloop>

<!--- Get the empty directories. --->
<cfset emptyDirs = utils.getEmptyDirectories(rootFilePath) />

<!--- Delete Empty Folders  --->
<cfloop query="emptyDirs">
	<cfdirectory action="delete" directory="#path#" />
</cfloop>

<!--- reset application --->
<cfset script_path = "http://" & cgi.server_name  & "/" & ReplaceNoCase(rootFilePath,ExpandPath('/'), "", "one") & "/index.cfm?reset_app" />
<cfhttp url="#script_Path#" timeout="0" />

<cfset messagesPath = getDirectoryFromPath(cgi.script_name) & "/messages.cfm" />
<cfset messagesOptions = "?type=purge&amp;fileCount=#extrafilesList.recordCount#&amp;dirCount=#emptyDirs.recordCount#" />
<cfset messagesURL = "http://" & cgi.server_name & messagesPath & messagesOptions />

<cfheader name="Content-Type" value="text/xml">
<cfoutput> 
<response showresponse="true"> 
	<ide url="#messagesURL#" > 
		<dialog width="655" height="600" />
		<commands>
			<command name="refreshproject">
				<params>
					<param key="projectname" value="<cfoutput>#rootFilePath#</cfoutput>" />
				</params>
			</command>
		</commands>	 
	</ide> 
</response> 
</cfoutput>
	
