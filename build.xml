<?xml version="1.0" encoding="UTF-8"?>
<project default="test.ant" name="Apptacular" basedir=".">
	
	<property file="settings.properties"/>
	
	<target name="test.ant" description="Exports the script of the database ">
		<echo message="Testing ant in this environment. " />
	</target>
	
	<target name="package" depends="test,build" />

	<target name="build" depends="build.clean,build.copy.files,build.zip,build.packagefordropbox" description="All of the stuff surrounding creating a clean copy of the build" />

	<target name="build.clean">
		<echo message="Cleaning Build Space"/>
		<delete dir="${build.dir}"/>
		<delete dir="${package.dir}/sql"/>
	</target>
	
	<target name="build.copy.files" description="Create a gitless version of the source code.">
		<echo message="Copying Files to Build Location"/>
		<copy todir="${build.dir}" preservelastmodified="true">
			<fileset dir="${dev.dir}">
				<exclude name='.gitignore'/>
				<exclude name='.git/**'/>
				<exclude name='settings.xml'/>
				<exclude name='settings.properties'/>
				<exclude name='.project'/>
				<exclude name='.settings'/>
				<exclude name='build.xml'/>
				<exclude name='**/.DS_Store'/>
			</fileset>	
		</copy>
		<echo message="Clearing out extraneous files."/>
		<delete file='${build.dir}/.settings' />
		<delete dir='${build.dir}/handlers/test' />
		
		<echo message="Create SQL file"/>
		<echo message="Moving SQL to the right spot"/>
		<move todir="${package.dir}/sql">
   			<fileset dir="${build.dir}/sql"/>
  		</move>
		
	</target>
	
	<target name="build.zip" description="Creates a zip file of the build.">
		<echo message="Creating Zip File"/>
		<zip destfile="${package.dir}/${app.name}.zip" basedir="${build.dir}"/>
	</target>
	
	<target name="build.packagefordropbox" description="Creates a zip of SQL, extension and pdfs.">
		<echo message="Collecting Files"/>
		<copy todir="${package.dir}/apptacularExtensionAndSQL/sql" preservelastmodified="true">
			<fileset dir="${package.dir}/sql">
				<exclude name='**/.DS_Store'/>
			</fileset>	
		</copy>
		
		<copy todir="${package.dir}/apptacularExtensionAndSQL/" preservelastmodified="true" file="${package.dir}/${app.name}.zip" />
	
		<echo message="Zipping and publishing"/>
		<zip destfile="${dropbox.dir}/apptacularExtensionAndSQL.zip" basedir="${package.dir}/apptacularExtensionAndSQL/"/>
	
		<echo message="Cleaning up."/>
		<delete dir='${package.dir}/apptacularExtensionAndSQL/' />
	
	</target>

	<target name="test" depends="test.apptacular,test.apps" />

	<target name="test.apptacular">
		<echo message="Running Apptacular Tests"/>
		
		<taskdef name="mxunittask" classname="org.mxunit.ant.MXUnitAntTask" classpath="${mxunit.jar}" />
		
		<mxunittask server="${server}" defaultrunner="${runner.app.cfc}" haltonerror="true" verbose="true">
			<directory path="${test.app.dir}" recurse="true" componentPath="${cfc.app.path}" />
		</mxunittask>
	</target>
	
	<target name="test.apps">
		<echo message="Running BlogDemo Tests"/>
		<ant antfile="${webroot}/BlogDemo/test/build.xml" inheritAll="false"/>
		
		<echo message="Running BlogDemoMSSQL Tests"/>
		<ant antfile="${webroot}/BlogDemoMSSQL/test/build.xml" inheritAll="false"/>
		
		<echo message="Running Sakila Tests"/>
		<ant antfile="${webroot}/SakilaDemo/test/build.xml" inheritAll="false"/>
	
	</target>	
	
	<target name="database.export.apptacular_blog" description="Exports scripto to create apptacular_blog database on MySQL">
		<echo message="Getting apptacular_blog MySQL Dump" />
		<exec executable="${mysql.mysqldump.exe}" spawn="false" dir="${mysql.dir}" output="${database.dir}apptacular_blog.sql">
			<arg line="--database apptacular_blog"/>
			<arg line="--tables"/>
			<arg line="--verbose"/>
			<arg line="--host ${database.host.local}"/>
			<arg line="--user ${database.username.local}"/>
			<arg line="--password=${database.password.local}"/>
			<arg line="--no-create-db" />
		</exec>
	</target>
	
	<target name="database.export.apptacular_sakila" description="Exports scripto to create apptacular_blog database on MySQL">
		<echo message="Getting apptacular_sakila MySQL Dump" />
		<exec executable="${mysql.mysqldump.exe}" spawn="false" dir="${mysql.dir}" output="${database.dir}apptacular_sakila.sql">
			<arg line="--database apptacular_sakila"/>
			<arg line="--tables"/>
			<arg line="--verbose"/>
			<arg line="--host ${database.host.local}"/>
			<arg line="--user ${database.username.local}"/>
			<arg line="--password=${database.password.local}"/>
			<arg line="--no-create-db" />
		</exec>
	</target>	
	
</project>	
